version: '3'
services:
  postgres:
    image: postgres:13.1-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - ./sql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: wurstmeister/zookeeper

  kafka0:
    image: wurstmeister/kafka
    expose:
      - 9092 # only for documentation (works event without it)
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka0
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  solr:
    image: solr:8.7.0
    ports:
      - 8983:8983
    volumes:
    - solr-data:/var/solr
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - mycore

  catalogue-service:
    build: ./catalogue-service
    depends_on:
      - kafka0
    environment:
      - KAFKA_BOOTSTRAP_SERVER=kafka0:9092
      - DATASOURCE_URL=jdbc:postgresql://postgres:5432/catalogue_service
      - DATASOURCE_USERNAME=catalogue_service_user
      - DATASOURCE_PASSWORD=catalogue_service_password


  catalogue-search-service:
    build: ./catalogue-search-service
    depends_on:
      - catalogue-service
    environment:
      - KAFKA_BOOTSTRAP_SERVER=kafka0:9092
      - SOLR_HOST=http://solr:8983/solr

  api-gateway:
    build: ./api-gateway
    depends_on:
      - catalogue-service
      - catalogue-search-service
    ports:
    - 8085:8085
    environment:
      - CATALOGUE_SERVICE_URL=http://catalogue-service:8081
      - CATALOGUE_SEARCH_SERVICE_URL=http://catalogue-search-service:8082

volumes:
  postgres-data:
    driver: local
  solr-data:
    driver: local